{"version":3,"sources":["serviceWorker.js","actions/get-mentors-action.js","actions/index.js","containers/Input.js","containers/home.js","components/home.js","containers/mentor-room.js","components/mentors-room.js","routes/routes.js","app.js","reducers/mentor-active.js","reducers/get-mentors.js","reducers/index.js","configureStore.js","index.js"],"names":["Boolean","window","location","hostname","match","fetchMentorsBegin","type","fetchMentorsSuccess","mentors","payload","fetchMentorsFailure","error","fetchMentors","dispatch","firebase","database","ref","once","data","mentorsjson","val","JSON","parse","json","catch","select","mentor","Input","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","uiConfig","signInFlow","signInOptions","auth","GithubAuthProvider","PROVIDER_ID","callbacks","signInSuccess","state","value","list","activementor","localStorage","getItem","push","items","_this2","onAuthStateChanged","user","getMentorLink","_this3","fetch","concat","providerData","uid","then","res","redirectToMentorRoom","html_url","event","_this4","target","length","filtredmentors","filter","gitaccount","replace","substr","toLowerCase","forEach","id","div","react_default","a","createElement","key","onClick","setValueInInput","bind","setState","innerText","_this5","correctmentor","setItem","stringify","preventDefault","className","style","flexDirection","onSubmit","handle","index_es","icon","placeholder","onChange","handleChange","StyledFirebaseAuth_default","firebaseAuth","Component","connect","link","bindActionCreators","HomeContainer","_this$props","loading","message","alt","src","containers_Input","React","Home","containers_home","MentorRoom","table","studentsname","taskname","students","student","tableheader","href","rel","name","tasks","task","fillTasks","taskfield","index","chooseclass","checkTask","status","undefined","signOut","mentorindata","metorsdata","findMentorInMentors","createHeader","height","width","active","dipatch","MentorsRoom","containers_mentor_room","routes","Switch","Route","exact","path","component","render","Redirect","to","App","_ref","history","esm","basename","process","mentor_active","arguments","action","initialState","get_mentors","objectSpread","allReducers","combineReducers","router","connectRouter","Mentors","Mentorctive","createHashHistory","library","add","fab","faSignOutAlt","faGithub","faSearch","initializeApp","apiKey","authDomain","databaseURL","projectId","store","createStore","createRootReducer","compose","applyMiddleware","routerMiddleware","thunk","ReactDOM","es","app","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8MAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,kKCbOC,EAAoB,iBAAO,CACtCC,KALiC,wBAQtBC,EAAsB,SAAAC,GAAO,MAAK,CAC7CF,KARmC,wBASnCG,QAAS,CAAED,aAGAE,EAAsB,SAAAC,GAAK,MAAK,CAC3CL,KAZmC,wBAanCG,QAAS,CAAEE,WAGN,SAASC,IACZ,OAAO,SAAAC,GACLA,EAASR,KACTS,IAASC,WACRC,IAAI,SACJC,KAAK,QAAS,SAACC,GACd,IAAMC,EAAcD,EAAKE,MACzBP,EAASN,EAAoBc,KAAKC,MAAMH,EAAYI,UAErDC,MAAM,SAAAb,GAAK,OAAIE,EAASH,EAAoBC,kBC1BtCc,EAAS,SAACC,GACnB,MAAO,CACHpB,KAJuB,kBAKvBG,QAASiB,oCCMXC,sBACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAaRQ,SAAW,CACTC,WAAY,QACZC,cAAe,CACbxB,IAASyB,KAAKC,mBAAmBC,aAEnCC,UAAW,CACTC,cAAe,kBAAM,KAlBvBd,EAAKe,MAAQ,CACXC,MAAO,GACPC,KAAM,IAERjB,EAAKkB,aAAe9C,OAAO+C,aAAaC,QAAQ,UACvB,cAAtBpB,EAAKkB,cAAsD,OAAtBlB,EAAKkB,eAC3ClB,EAAKD,MAAMH,OAAOJ,KAAKC,MAAMO,EAAKkB,eAClClB,EAAKD,MAAMsB,KAAK,iBAElBrB,EAAKrB,QAAUqB,EAAKD,MAAMpB,QAAQ2C,MAXjBtB,mFAwBC,IAAAuB,EAAApB,KAClBlB,IAASyB,OAAOc,mBAAmB,SAACC,GAClCF,EAAKG,cAAcD,2CAITA,GAAM,IAAAE,EAAAxB,KACfsB,GACDG,MAAK,+BAAAC,OAAgCJ,EAAKK,aAAa,GAAGC,MACvDC,KAAK,SAAAC,GAAG,OAAIA,EAAIvC,SAChBsC,KAAK,SAAA3C,GACJsC,EAAKO,qBAAqB7C,EAAK8C,iDAK1BC,GAAO,IAAAC,EAAAlC,KACZc,EAAO,GACuB,IAA9BmB,EAAME,OAAOtB,MAAMuB,QACrBpC,KAAKqC,eAAiBrC,KAAKxB,QAAQ8D,OAAO,SAAC5C,GAAD,OAC1CA,EAAO6C,WAAWC,QAAQ,sBAAuB,IAC9CC,OAAO,EAAGR,EAAME,OAAOtB,MAAMuB,QAAQM,gBAAkBT,EAAME,OAAOtB,MAAM6B,gBAE/E1C,KAAKqC,eAAeM,QAAQ,SAACjD,EAAQkD,GACnC,IAAMC,EAAMC,EAAAC,EAAAC,cAAA,OAAKC,IAAKL,EAAIM,QAAShB,EAAKiB,gBAAgBC,KAAKlB,IAAQxC,EAAO6C,WAAWC,QAAQ,4BAA6B,IAAIE,eAChI5B,EAAKI,KAAK2B,KAEZ7C,KAAKqD,SAAS,CAACvC,KAAMA,KAErBd,KAAKqD,SAAS,CAACvC,KAAM,KAEvBd,KAAKqD,SAAS,CAACxC,MAAOoB,EAAME,OAAOtB,gDAGrBoB,GACdjC,KAAKqD,SAAS,CAACxC,MAAOoB,EAAME,OAAOmB,YACnCtD,KAAKqD,SAAS,CAACvC,KAAM,kDAGFmB,GAAO,IAAAsB,EAAAvD,KAC1BA,KAAKxB,QAAQmE,QAAQ,SAACjD,GACpB,IAAIa,EAAO,KACLiD,EAAgB9D,EAAO6C,WAAWC,QAAQ,4BAA6B,IAAIE,cAC7ET,IACF1B,EAAO0B,EAAMO,QAAQ,4BAA6B,IAAIE,eAEpDc,IAAkBD,EAAK3C,MAAMC,OAAS2C,IAAkBjD,IAC1DtC,OAAO+C,aAAayC,QAAQ,SAAUpE,KAAKqE,UAAUF,IACrDD,EAAK3D,MAAMH,OAAO+D,GAClBD,EAAK3D,MAAMsB,KAAK,mDAKde,GACNjC,KAAK+B,uBACLE,EAAM0B,kDAIN,OACEb,EAAAC,EAAAC,cAAA,OAAKY,UAAU,kCAAkCC,MAAO,CAACC,cAAgB,WACvEhB,EAAAC,EAAAC,cAAA,OAAKY,UAAU,kBACbd,EAAAC,EAAAC,cAAA,gCAEFF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mCACbd,EAAAC,EAAAC,cAAA,QAAMe,SAAW/D,KAAKgE,OAAQJ,UAAU,yCACtCd,EAAAC,EAAAC,cAAA,OAAKhE,IAAI,eAAe4E,UAAU,kCAChCd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,gEACbd,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAiBC,KAAK,SAASN,UAAU,wCACzCd,EAAAC,EAAAC,cAAA,SAAOY,UAAU,uCAAuCO,YAAY,gBAAgBtD,MAAOb,KAAKY,MAAMC,MAAOuD,SAAUpE,KAAKqE,aAAajB,KAAKpD,SAEhJ8C,EAAAC,EAAAC,cAAA,OAAKY,UAAU,uCACZ5D,KAAKY,MAAME,OAGhBgC,EAAAC,EAAAC,cAAA,UAAQE,QAASlD,KAAKkD,QAAQE,KAAKpD,MAAO4D,UAAU,iCAApD,WAXJ,KAgBEd,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,CAAoBa,UAAU,2BAC5BxD,SAAUJ,KAAKI,SACfmE,aAAczF,IAASyB,QAEvBuC,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAiBC,KAAM,CAAC,MAAO,UAAWN,UAAU,6CA/G9CY,cAmILC,kBAXf,SAA0B7D,GACxB,MAAO,CACLpC,QAASoC,EAAMpC,QACfkG,KAAM9D,EAAM8D,OAIhB,SAA+B7F,GAC7B,OAAO8F,YAAmB,CAAClF,OAAQA,EAAQyB,UAAQrC,IAGtC4F,CAA8C9E,GCvIvDiF,sMAEF5E,KAAKJ,MAAMf,SAASD,sCAGb,IAAAiG,EACoB7E,KAAKJ,MAAxBjB,EADDkG,EACClG,MAAOmG,EADRD,EACQC,QAEf,OAAInG,EACKmE,EAAAC,EAAAC,cAAA,qBAAarE,EAAMoG,SAGxBD,EACKhC,EAAAC,EAAAC,cAAA,OAAKY,UAAU,qBACpBd,EAAAC,EAAAC,cAAA,OAAKgC,IAAI,aAAaC,IAAI,0FAK5BnC,EAAAC,EAAAC,cAACkC,EAAD,aAnBsBC,IAAMX,YA6BnBC,cALS,SAAA7D,GAAK,MAAK,CAChCkE,QAASlE,EAAMpC,QAAQsG,QACvBnG,MAAOiC,EAAMpC,QAAQG,QAGR8F,CAAyBG,GC3BzBQ,EANF,WACX,OAAOtC,EAAAC,EAAAC,cAAA,WACLF,EAAAC,EAAAC,cAACqC,EAAD,QCKEC,sBACJ,SAAAA,EAAY1F,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsF,IACjBzF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwF,GAAAnF,KAAAH,KAAMJ,KACDF,OAAS,GACdG,EAAK0F,MAAQ,CACXC,aAAc,GACdC,SAAU,IAEZ5F,EAAKD,MAAMhB,eAPMiB,mFAWjBG,KAAKJ,MAAMhB,sDAGE,IAAAwC,EAAApB,KACbA,KAAKuF,MAAMC,aAAatE,KAAK4B,EAAAC,EAAAC,cAAA,MAAIC,IAAI,eACrCjD,KAAKN,OAAOgG,SAAS/C,QAAQ,SAACgD,EAAS/C,GACrC,IAAMgD,EAAc9C,EAAAC,EAAAC,cAAA,MAAIC,IAAKL,GAAIE,EAAAC,EAAAC,cAAA,KAAG6C,KAAMF,EAAQjB,KAAMvC,OAAO,SAAS2D,IAAI,uBAAuBH,EAAQI,OAC3G3E,EAAKmE,MAAMC,aAAatE,KAAK0E,GAClB,IAAPhD,GACF+C,EAAQK,MAAMrD,QAAQ,SAACsD,EAAMrD,GAC3BxB,EAAK8E,UAAUD,EAAMrD,yCAMnBqD,EAAMrD,GAAI,IAAApB,EAAAxB,KACZmG,EAAY,GAClBnG,KAAKN,OAAOgG,SAAS/C,QAAQ,SAACgD,EAASS,GACrC,IAAMC,EAAc7E,EAAK8E,UAAUX,EAAQK,MAAMpD,GAAI2D,QACrDJ,EAAUjF,KAAK4B,EAAAC,EAAAC,cAAA,MAAIC,IAAKmD,EAAOxC,UAAWyC,OAE5CrG,KAAKuF,MAAME,SAASvE,KAAK4B,EAAAC,EAAAC,cAAA,MAAIC,IAAKL,GAAIE,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAG6C,KAAMI,EAAKvB,KAAMvC,OAAO,SAAS2D,IAAI,uBAAuBG,EAAKA,OAAeE,sCAGrHI,GACR,OAAOA,GACL,IAAK,UACH,MAAO,gBACT,IAAK,WACH,MAAO,gBACT,IAAK,cACH,MAAO,aACT,IAAK,OACH,MAAO,cACT,KAAK,EACH,MAAO,gBACT,QAAS,MAAO,uDAKlBtI,OAAO+C,aAAayC,QAAQ,cAAU+C,GACtC1H,IAASyB,OAAOkG,UAChBzG,KAAKJ,MAAMsB,KAAK,uDAGI,IAAAgB,EAAAlC,KACpBA,KAAKJ,MAAMpB,QAAQmE,QAAQ,SAAC+D,GACJA,EAAanE,WAAWC,QAAQ,4BAA6B,IAAIE,gBACjER,EAAKxC,SACzBwC,EAAKxC,OAASgH,sCAMlB,GAAI1G,KAAKJ,MAAMF,OAIbM,KAAKN,OAASM,KAAKJ,MAAMF,WAJL,CACpB,IAAMiH,EAAa1I,OAAO+C,aAAaC,QAAQ,UAC/CjB,KAAKN,OAASL,KAAKC,MAAMqH,GAK3B,OADoB3G,KAAKJ,MAAjBkF,QAEChC,EAAAC,EAAAC,cAAA,OAAKY,UAAU,qBACpBd,EAAAC,EAAAC,cAAA,OAAKgC,IAAI,aAAaC,IAAI,0FAGG,IAA9BjF,KAAKJ,MAAMpB,QAAQ4D,QACpBpC,KAAK4G,sBACL5G,KAAKuF,MAAMC,aAAe,GAC1BxF,KAAKuF,MAAME,SAAW,GACtBzF,KAAK6G,eAEH/D,EAAAC,EAAAC,cAAA,OAAKY,UAAU,sDACbd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,8DACbd,EAAAC,EAAAC,cAAA,UAAQY,UAAU,mDAAmDV,QAASlD,KAAKkD,QAAQE,KAAKpD,OAC9F8C,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAiBC,KAAK,eAAeL,MAAO,CAACiD,OAAQ,KAAMC,MAAO,QADpE,WAKFjE,EAAAC,EAAAC,cAAA,MAAKY,UAAU,wBAAf,WACW5D,KAAKN,OAAO6C,WAAWC,QAAQ,+BAAgC,IAAIE,eAE9EI,EAAAC,EAAAC,cAAA,SAAOY,UAAU,uBACfd,EAAAC,EAAAC,cAAA,SAAOY,UAAU,8BACfd,EAAAC,EAAAC,cAAA,UAAKhD,KAAKuF,MAAMC,eAElB1C,EAAAC,EAAAC,cAAA,SAAOY,UAAU,4BACd5D,KAAKuF,MAAME,aAMZ3C,EAAAC,EAAAC,cAAA,mBA5GWwB,cA6HVC,kBAZf,SAA0B7D,GACxB,MAAO,CACLlB,OAAQkB,EAAMoG,OACdxI,QAASoC,EAAMpC,QAAQ2C,MACvB2D,QAASlE,EAAMpC,QAAQsG,UAI3B,SAA+BmC,GAC7B,OAAOtC,YAAmB,CAAEzD,SAAMtC,aAAcA,GAAgBqI,IAGnDxC,CAA+Ca,GC9H/C4B,EANK,WAClB,OAAOpE,EAAAC,EAAAC,cAAA,WACLF,EAAAC,EAAAC,cAACmE,EAAD,QCUWC,EATbtE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,KACEvE,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWrC,IACrCtC,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAOE,KAAK,eAAeC,UAAWP,IACtCpE,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,GAAGE,OAAQ,kBAC3B5E,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAUC,GAAG,cCOJC,EAZH,SAAAC,GAAiB,IAAdC,EAAcD,EAAdC,QACb,OACEjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAiBD,QAASA,EAASE,SAAUC,qBACzCd,4CCNOe,EAAA,WAAgC,IAAtBvH,EAAsBwH,UAAAhG,OAAA,QAAAoE,IAAA4B,UAAA,GAAAA,UAAA,GAAd,KAAMC,EAAQD,UAAAhG,OAAA,EAAAgG,UAAA,QAAA5B,EAC3C,OAAO6B,EAAO/J,MACV,IRJuB,kBQKnB,OAAO+J,EAAO5J,QAClB,QACI,OAAOmC,YCDb0H,EAAe,CACnBnH,MAAO,GACP2D,SAAS,EACTnG,MAAO,MAGM4J,EAAA,WAAwC,IAA9B3H,EAA8BwH,UAAAhG,OAAA,QAAAoE,IAAA4B,UAAA,GAAAA,UAAA,GAAtBE,EAAcD,EAAQD,UAAAhG,OAAA,EAAAgG,UAAA,QAAA5B,EACrD,OAAO6B,EAAO/J,MACZ,IVb+B,sBUc7B,OAAOwB,OAAA0I,EAAA,EAAA1I,CAAA,GACFc,EADL,CAEEkE,SAAS,EACTnG,MAAO,OAGX,IVnBiC,wBUoB/B,OAAOmB,OAAA0I,EAAA,EAAA1I,CAAA,GACFc,EADL,CAEEkE,SAAS,EACT3D,MAAOkH,EAAO5J,QAAQD,UAG1B,IVzBiC,wBU0B/B,OAAOsB,OAAA0I,EAAA,EAAA1I,CAAA,GACFc,EADL,CAEEkE,SAAS,EACTnG,MAAO0J,EAAO5J,QAAQE,MACtBwC,MAAO,KAGX,QACE,OAAOP,IC1BE6H,EANK,SAACV,GAAD,OAAaW,YAAgB,CAC7CC,OAAQC,YAAcb,GACtBvJ,QAASqK,EACT7B,OAAQ8B,aCFCf,EAAUgB,cCQvBC,IAAQC,IAAIC,IAAKC,IAAcC,IAAUC,KAEzCvK,IAASwK,cAAc,CACnBC,OAAQ,0CACRC,WAAY,yCACZC,YAAa,gDACbC,UAAW,2BAGf,IAAMC,EDdUC,YACZC,EAAkB9B,GAClB+B,YACEC,YACEC,YAAiBjC,GACjBkC,OCWRC,IAASxC,OACL5E,EAAAC,EAAAC,cAACmH,EAAA,EAAD,CAAUR,MAAOA,GACb7G,EAAAC,EAAAC,cAACoH,EAAD,CAAKrC,QAASA,KAElBsC,SAASC,eAAe,SdoGtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5I,KAAK,SAAA6I,GACjCA,EAAaC","file":"static/js/main.99f7a04f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import firebase from 'firebase';\r\nexport const FETCH_MENTORS_BEGIN = 'FETCH_MENTORS_BEGIN';\r\nexport const FETCH_MENTORS_SUCCESS = 'FETCH_MENTORS_SUCCESS';\r\nexport const FETCH_MENTORS_FAILURE = 'FETCH_MENTORS_FAILURE';\r\n\r\nexport const fetchMentorsBegin = () => ({\r\n  type: FETCH_MENTORS_BEGIN\r\n});\r\n\r\nexport const fetchMentorsSuccess = mentors => ({\r\n  type: FETCH_MENTORS_SUCCESS,\r\n  payload: { mentors }\r\n});\r\n\r\nexport const fetchMentorsFailure = error => ({\r\n  type: FETCH_MENTORS_FAILURE,\r\n  payload: { error }\r\n});\r\n\r\nexport function fetchMentors() {\r\n    return dispatch => {\r\n      dispatch(fetchMentorsBegin());\r\n      firebase.database()\r\n      .ref('/data')\r\n      .once('value', (data) => {\r\n        const mentorsjson = data.val();\r\n        dispatch(fetchMentorsSuccess(JSON.parse(mentorsjson.json)));\r\n      })\r\n      .catch(error => dispatch(fetchMentorsFailure(error)));\r\n    };\r\n}","export const MENTOR_SELECTED = 'MENTOR_SELECTED';\r\n\r\nexport const select = (mentor) => {\r\n    return {\r\n        type: MENTOR_SELECTED,\r\n        payload: mentor\r\n    }\r\n};\r\n","import React, {Component} from 'react';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {select} from '../actions/index';\r\nimport { push } from 'connected-react-router';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport firebase from 'firebase';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\n\r\nimport './input.css';\r\n\r\nclass Input extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: '',\r\n      list: [],\r\n    };\r\n    this.activementor = window.localStorage.getItem('mentor');\r\n    if(this.activementor !== 'undefined' && this.activementor !== null) {\r\n      this.props.select(JSON.parse(this.activementor));\r\n      this.props.push('/mentorsroom');\r\n    }\r\n    this.mentors = this.props.mentors.items;\r\n  }\r\n\r\n  uiConfig = {\r\n    signInFlow: 'popup',\r\n    signInOptions: [\r\n      firebase.auth.GithubAuthProvider.PROVIDER_ID\r\n    ],\r\n    callbacks: {\r\n      signInSuccess: () => false,\r\n    },\r\n  }\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      this.getMentorLink(user);\r\n    })\r\n  }\r\n\r\n  getMentorLink(user) {\r\n    if(user) {\r\n      fetch(`https://api.github.com/user/${user.providerData[0].uid}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          this.redirectToMentorRoom(data.html_url)\r\n        })\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    const list = [];\r\n      if (event.target.value.length !== 0) {\r\n        this.filtredmentors = this.mentors.filter((mentor) => \r\n        mentor.gitaccount.replace('https://github.com/', '')\r\n          .substr(0, event.target.value.length).toLowerCase() === event.target.value.toLowerCase()\r\n      )\r\n      this.filtredmentors.forEach((mentor, id) => {\r\n        const div = <div key={id} onClick={this.setValueInInput.bind(this)}>{mentor.gitaccount.replace(/https:|github.com|\\u002F/g, '').toLowerCase()}</div>\r\n        list.push(div);\r\n      });\r\n      this.setState({list: list});\r\n    } else {\r\n      this.setState({list: []});\r\n    }\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n  setValueInInput(event) {\r\n    this.setState({value: event.target.innerText})\r\n    this.setState({list: []})\r\n  }\r\n\r\n  redirectToMentorRoom(event) {\r\n    this.mentors.forEach((mentor) => {\r\n      let auth = null;\r\n      const correctmentor = mentor.gitaccount.replace(/https:|github.com|\\u002F/g, '').toLowerCase();\r\n      if (event) {\r\n        auth = event.replace(/https:|github.com|\\u002F/g, '').toLowerCase();\r\n      }\r\n      if (correctmentor === this.state.value || correctmentor === auth) {\r\n        window.localStorage.setItem('mentor', JSON.stringify(correctmentor));\r\n        this.props.select(correctmentor);\r\n        this.props.push('/mentorsroom');\r\n      }\r\n    });\r\n  }\r\n\r\n  onClick(event) {\r\n    this.redirectToMentorRoom();\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='header-container flex-container' style={{flexDirection:  \"column\"}}>\r\n        <div className='flex-container'>\r\n          <h1>Mentors Dashboard</h1>\r\n        </div>\r\n        <div className='header-container flex-container'>\r\n          <form onSubmit= {this.handle} className='header-container__form flex-container'> \r\n            <div ref=\"autocomplete\" className='header-container__autocomplete'>\r\n              <div className='header-container__autocomplete-inputcontainer flex-container'>\r\n                <FontAwesomeIcon icon='search' className='header-container__autocomplete-icon'/>\r\n                <input className='header-container__autocomplete-input' placeholder=\"enter gitname\" value={this.state.value} onChange={this.handleChange.bind(this)} />\r\n              </div>\r\n              <div className='header-container__autocomplete-list'>\r\n                {this.state.list}\r\n              </div>\r\n            </div>\r\n            <button onClick={this.onClick.bind(this)} className='header-container__form-button'>\r\n              Search \r\n            </button>\r\n          </form>\r\n          or\r\n          <div>\r\n            <StyledFirebaseAuth className='header-container__github' \r\n              uiConfig={this.uiConfig}\r\n              firebaseAuth={firebase.auth()}\r\n            >\r\n              <FontAwesomeIcon icon={['fab', 'github']} className='header-container__github-icon'/>\r\n            </StyledFirebaseAuth>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction  mapStateToProps(state) {\r\n  return {\r\n    mentors: state.mentors,\r\n    link: state.link,\r\n  };\r\n}\r\n\r\nfunction matchDispatchToProps (dispatch) {\r\n  return bindActionCreators({select: select, push }, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps,matchDispatchToProps)(Input);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchMentors } from '../actions/get-mentors-action';\r\nimport Input from './Input';\r\n\r\nimport './home.css';\r\n\r\nclass HomeContainer extends React.Component {\r\n  componentDidMount() {\r\n    this.props.dispatch(fetchMentors());\r\n  }\r\n\r\n  render() {\r\n    const { error, loading } = this.props;\r\n\r\n    if (error) {\r\n      return <div>Error! {error.message}</div>;\r\n    }\r\n\r\n    if (loading) {\r\n      return <div className='loading-container'>\r\n        <img alt='Loading...' src='https://res.cloudinary.com/p-d/image/upload/v1550868069/cod-jam-culture/spinner1.gif'/>\r\n      </div>\r\n    }\r\n\r\n    return (\r\n      <Input />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  loading: state.mentors.loading,\r\n  error: state.mentors.error\r\n});\r\n\r\nexport default connect(mapStateToProps)(HomeContainer);","import React from 'react';\r\nimport HomeContainer from '../containers/home';\r\n\r\nconst Home = () => {\r\n  return <div>\r\n    <HomeContainer />\r\n  </div>\r\n};\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport { push } from 'connected-react-router';\r\nimport firebase from 'firebase';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { fetchMentors } from '../actions/get-mentors-action';\r\n\r\nimport './mentor-room.css';\r\n\r\nclass MentorRoom extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.mentor = '';\r\n    this.table = {\r\n      studentsname: [],\r\n      taskname: []\r\n    }\r\n    this.props.fetchMentors();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchMentors();\r\n  }\r\n\r\n  createHeader() {\r\n    this.table.studentsname.push(<td key='emptyline'></td>);\r\n    this.mentor.students.forEach((student, id) => {\r\n      const tableheader = <td key={id}><a href={student.link} target=\"_blank\" rel=\"noopener noreferrer\">{student.name}</a></td>\r\n      this.table.studentsname.push(tableheader);\r\n      if (id === 0) {\r\n        student.tasks.forEach((task, id) => {\r\n          this.fillTasks(task, id);\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  fillTasks(task, id) {\r\n    const taskfield = [];\r\n    this.mentor.students.forEach((student, index) => {\r\n      const chooseclass = this.checkTask(student.tasks[id].status);\r\n      taskfield.push(<td key={index} className={chooseclass}></td>);\r\n    })\r\n    this.table.taskname.push(<tr key={id}><td><a href={task.link} target='_blank' rel=\"noopener noreferrer\">{task.task}</a></td>{taskfield}</tr>);\r\n  }\r\n\r\n  checkTask(status) {\r\n    switch(status) {\r\n      case 'Checked':\r\n        return 'not-performed';\r\n      case 'Checking':\r\n        return 'need-to-check';\r\n      case 'In Progress':\r\n        return 'in-process';\r\n      case 'ToDo':\r\n        return 'todo-status';\r\n      case 0: \r\n        return 'not-performed';\r\n      default: return 'checked-by-mentor';\r\n    }\r\n  }\r\n\r\n  onClick() {\r\n    window.localStorage.setItem('mentor', undefined);\r\n    firebase.auth().signOut();\r\n    this.props.push('/home');\r\n  }\r\n\r\n  findMentorInMentors() {\r\n    this.props.mentors.forEach((mentorindata) => {\r\n      const correctmentor = mentorindata.gitaccount.replace(/https:|github.com|\\u002F/g, '').toLowerCase();\r\n      if (correctmentor === this.mentor) {\r\n        this.mentor = mentorindata;\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    if(!this.props.mentor){\r\n      const metorsdata = window.localStorage.getItem('mentor');\r\n      this.mentor = JSON.parse(metorsdata);\r\n    } else {\r\n      this.mentor = this.props.mentor;\r\n    }\r\n    const { loading } = this.props;\r\n    if (loading) {\r\n      return <div className='loading-container'>\r\n        <img alt='Loading...' src='https://res.cloudinary.com/p-d/image/upload/v1550868069/cod-jam-culture/spinner1.gif'/>\r\n      </div>\r\n    }\r\n    if(this.props.mentors.length !== 0) {\r\n      this.findMentorInMentors();\r\n      this.table.studentsname = [];\r\n      this.table.taskname = [];\r\n      this.createHeader();\r\n      return (\r\n        <div className='mentors-room-container flex-container__mentorsroom'>\r\n          <div className='mentors-room__button-container flex-container__mentorsroom'>\r\n            <button className='mentors-room__button flex-container__mentorsroom' onClick={this.onClick.bind(this)}>\r\n              <FontAwesomeIcon icon='sign-out-alt' style={{height: '40', width: '40'}}/>\r\n              logout\r\n            </button>\r\n          </div>\r\n          <h2  className='mentors-room__header'> \r\n            Mentor: {this.mentor.gitaccount.replace(/https:|github.com|[^a-zA-Z]/g, '').toLowerCase()} \r\n          </h2>\r\n          <table className='mentors-room__table'>\r\n            <thead className='mentors-room__table-header'>\r\n              <tr>{this.table.studentsname}</tr>\r\n            </thead>\r\n            <tbody className='mentors-room__table-body'>\r\n              {this.table.taskname}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (<div></div>)\r\n    }\r\n  }\r\n}\r\n\r\nfunction  mapStateToProps(state) {\r\n  return {\r\n    mentor: state.active,\r\n    mentors: state.mentors.items,\r\n    loading: state.mentors.loading,\r\n  };\r\n}\r\n\r\nfunction matchDispatchToProps (dipatch) {\r\n  return bindActionCreators({ push, fetchMentors: fetchMentors }, dipatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(MentorRoom);\r\n\r\n","import React from 'react';\r\nimport MentorRoom from '../containers/mentor-room';\r\n\r\nconst MentorsRoom = () => {\r\n  return <div>\r\n    <MentorRoom />\r\n  </div>\r\n};\r\n\r\nexport default MentorsRoom;","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router';\r\nimport Home from '../components/home';\r\nimport MentorsRoom from '../components/mentors-room';\r\n\r\nconst routes = (\r\n  <Switch>\r\n    <Route exact path=\"/home\" component={Home} />\r\n    <Route path=\"/mentorsroom\" component={MentorsRoom} />\r\n    <Route exact path=\"\" render={() => (\r\n      <Redirect to=\"/home\"/>\r\n    )} />\r\n  </Switch>\r\n)\r\n\r\nexport default routes","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport routes from './routes/routes';\r\n\r\nconst App = ({ history }) => {\r\n  return (\r\n    <ConnectedRouter history={history} basename={process.env.PUBLIC_URL} >\r\n      { routes }\r\n    </ConnectedRouter>\r\n  )\r\n}\r\n\r\nApp.propTypes = {\r\n  history: PropTypes.object,\r\n}\r\n\r\nexport default App;","import { MENTOR_SELECTED } from '../actions/index';\r\n\r\nexport default function (state = null, action) {\r\n    switch(action.type) {\r\n        case MENTOR_SELECTED:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n  FETCH_MENTORS_BEGIN,\r\n  FETCH_MENTORS_SUCCESS,\r\n  FETCH_MENTORS_FAILURE\r\n} from '../actions/get-mentors-action';\r\n\r\nconst initialState = {\r\n  items: [],\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch(action.type) {\r\n    case FETCH_MENTORS_BEGIN:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n\r\n    case FETCH_MENTORS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        items: action.payload.mentors\r\n      };\r\n\r\n    case FETCH_MENTORS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n        items: []\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import {combineReducers} from 'redux';\r\nimport Mentorctive from './mentor-active';\r\nimport Mentors from './get-mentors';\r\nimport { connectRouter } from 'connected-react-router'\r\n\r\nconst allReducers = (history) => combineReducers({\r\n    router: connectRouter(history),\r\n    mentors: Mentors,\r\n    active: Mentorctive,\r\n})\r\n\r\nexport default allReducers;","import { createHashHistory } from 'history';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport createRootReducer from './reducers';\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport const history = createHashHistory();\r\n\r\nexport default function configureStore() {\r\n  const store = createStore(\r\n    createRootReducer(history),\r\n    compose(\r\n      applyMiddleware(\r\n        routerMiddleware(history),\r\n        thunk,\r\n      ),\r\n    ),\r\n  )\r\n\r\n  return store\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport App from './app';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab, faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { faSignOutAlt, faSearch } from '@fortawesome/free-solid-svg-icons';\nimport firebase from 'firebase';\n\n\nimport configureStore, { history } from './configureStore'\n\nlibrary.add(fab, faSignOutAlt, faGithub, faSearch);\n\nfirebase.initializeApp({\n    apiKey: 'AIzaSyBCM56DMZTpzdh_ehIT8jf_jI_ljetLeE4',\n    authDomain: 'mentor-dashboard-b8c25.firebaseapp.com',\n    databaseURL: 'https://mentor-dashboard-b8c25.firebaseio.com',\n    projectId: 'mentor-dashboard-b8c25',\n})\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App history={history} />\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}